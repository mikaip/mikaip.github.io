---
layout: post
title:      "Rails Project"
date:       2017-11-19 23:56:22 +0000
permalink:  rails_project
---


This project was challenging from start to finish but I think it's finally ready for a first round review. I had a hard time coming up with an idea as always. I wanted to choose something that was relevant and hopefully useful to me or people around me - so I decided on a quiz app. From my experience of teaching small groups of middle school students and helping other teachers, I always thought it would be nice to have an online/automated way for students to keep track of their work and teachers to keep track of students’ progress. More specifically, I wanted to focus on quizzes because of the way this particular class is set up: students take a vocabulary quiz and a book quiz every week. Something that would be awesome and efficient where a teacher can magically create a list of multiple-choice and open-ended questions for the novel they are reading, and the class can magically take this quiz in class on their laptops, see the progress of their answers, and then be led to a final page with their score, and all scores would be trackable.

However.... it turned out to be more like a course/quiz management app because I quickly realized that my initial idea of having a quiz template itself, with questions and answer choices, along with a way to take the quiz and submit it, may be too complicated at the moment. So I decided to just make a simpler dashboard-style app for now. This defeats the whole main purpose of a QUIZ but..hopefully I would like to add the actual creating-and-submitting features as the next steps of this app. The idea is the same but not..quite..

For now though, users are either admin or not admin, where admin can create/manage courses and "quizzes" for those courses, and non-admin (students) can enroll in a course and “take” a quiz (change the status).  A user has many courses and a course has many users and quizzes. The idea is that a student logs in, pick one or more courses, and sees a list of available quizzes. Admin would see a list of current courses and quizzes and be able to create/edit/delete. The most challenging parts were conceptually understanding and implementing the join table as well as the custom attribute writer. These were things that I thought I understood when I did the lesson on them, but then actually integrating into my own project proved much more difficult. For example, I was initally confused on how to use the custrom attributes on a form when the model is already nested, or what the point of it was. I also used Devise because I wanted to just get the hang of it, whether it was efficient or not. It did have its pros and cons but I wanted to get more experience using it.

There are a lot of improvements needed and features to add when I am able to without messing it up, but I truly learned so much from this project. It helped a lot to go back through the previous lessons, especially because it had been a while, and I also don’t think I've ever googled so much before. I relied on other people’s previous posts/answers every time I got stuck, which was often - this I think is a sign of progress toward my goal of thinking like a programmer. Working through this project reinforced the idea that I've always been reading and hearing about - that it's not about memorization of details but that it's the thinking process that is important, and I feel like I was able to get a sense of what that may be like! I gained a much better understanding of Rails and hope to expand on it through the rest of the curriculum!
